include:
  - template: Dependency-Scanning.gitlab-ci.yml

image: node:10

before_script:
  - echo "@cimpress-technology:registry=https://artifactory.cimpress.io/artifactory/api/npm/npm-release-local/" > ~/.npmrc
  - echo "//artifactory.cimpress.io/artifactory/api/npm/npm-release-local/:_authToken=${CT_ARTIFACTORY_NPM_TOKEN}" >> ~/.npmrc
  - npm i -g grunt@1.1.0
  - npm ci
  - export VERSION=${CI_COMMIT_SHA:0:7}

stages:
  - build
  - publish
  - deploy

build:
  stage: build
  script:
    - npm test
  coverage: '/All files\s*\|\s*[.?\d]+\s*\|\s*([0-9.]+)/'
  artifacts:
    paths:
      - coverage/

dependency_scanning:
  stage: build
  before_script:
    - echo "@cimpress-technology:registry=https://artifactory.cimpress.io/artifactory/api/npm/npm-release-local/" > ~/.npmrc
    - echo "//artifactory.cimpress.io/artifactory/api/npm/npm-release-local/:_authToken=${CT_ARTIFACTORY_NPM_TOKEN}" >> ~/.npmrc

publish:
  image: briangweber/docker-node:10
  stage: publish
  script:
    - grunt bundle --packageVersion=$VERSION --packageName=$CI_PROJECT_NAME
  only:
    - master
  except:
    - schedules

deploy-int:
  stage: deploy
  environment:
    name: integration
  script:
    - grunt deploy --environment=int --packageVersion=$VERSION --packageName=$CI_PROJECT_NAME
  only:
    - master
  except:
    - schedules

deploy-prd:
  stage: deploy
  environment:
    name: production
  script:
    - grunt deploy --environment=prd --packageVersion=$VERSION --packageName=$CI_PROJECT_NAME
  when: manual
  only:
    - master
  except:
    - schedules
