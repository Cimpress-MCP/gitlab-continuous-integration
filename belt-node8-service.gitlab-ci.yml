image: briangweber/node:8

before_script:
  - echo "@cimpress-technology:registry=https://artifactory.cimpress.io/artifactory/api/npm/npm-release-local/" > ~/.npmrc
  - echo "//artifactory.cimpress.io/artifactory/api/npm/npm-release-local/:_authToken=${CT_ARTIFACTORY_NPM_TOKEN}" >> ~/.npmrc
  - npm i -g grunt
  - npm ci
  - export VERSION=${CI_COMMIT_SHA:0:7}

stages:
  - build
  - validate
  - publish
  - deploy

build:
  stage: build
  script:
    - npm test
  coverage: '/Branches\s*:\s*(\d*\.?\d+)%/'
  artifacts:
    paths:
      - coverage/

dependency_check:
  before_script:
    - '' # no npm here, so ensure it is not invoked
  image: maven:3.5.0-jdk-8-alpine
  stage: validate
  variables:
    REPORT_DIR: "dependency-check-reports"
    DATA_DIR: "dependency-check/data"
  artifacts:
    when: always
    paths:
    - ${REPORT_DIR}/${CI_PROJECT_NAME}-report.html
    - ${REPORT_DIR}/${CI_PROJECT_NAME}-log.log
    expire_in: 1 week
  cache:
    paths:
      - ${DATA_DIR}/*.db
  script:
    - 'curl https://s3-eu-west-1.amazonaws.com/cimpress-commerce-dependency-check/run-dependency-check.sh | bash -s "$CI_PROJECT_NAME" "$REPORT_DIR"'
  only:
    - schedules

publish:
  image: briangweber/docker-node:carbon
  stage: publish
  script:
    - grunt bundle --packageVersion=$VERSION --packageName=$CI_PROJECT_NAME
  only:
    - develop
  except:
    - schedules

deploy-cit:
  stage: deploy
  environment:
    name: cit
  script:
    - grunt deploy --environment=cit --packageVersion=$VERSION --packageName=$CI_PROJECT_NAME
  only:
    - develop
  except:
    - schedules

deploy-int:
  stage: deploy
  environment:
    name: integration
  script:
    - grunt deploy --environment=int --packageVersion=$VERSION --packageName=$CI_PROJECT_NAME
  only:
    - develop
  except:
    - schedules

deploy-prd:
  stage: deploy
  environment:
    name: production
  script:
    - grunt deploy --environment=prd --packageVersion=$VERSION --packageName=$CI_PROJECT_NAME
  when: manual
  only:
    - develop
  except:
    - schedules
